name: Flask App Deploy or Destroy
on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select the action'
        required: true
        default: 'deploy'
        type: choice
        options:
          - deploy
          - destroy

jobs:
  deploy-web_app:
    runs-on: ubuntu-24.04
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}      
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
 
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.1
      
      - name: Terraform initialise
        run: terraform init

      - name: Terraform Apply or Destroy
        run: |
          if [ "${{ github.event.inputs.action }}" = "deploy" ]; then
            # Make Dockerrun.aws.json executable
            chmod +x zip-Dockerrun.aws.json.sh
            
            # Create zip file for Dockerrun.aws.json
            ./zip-Dockerrun.aws.json.sh
            
            terraform apply -auto-approve
          
          elif [ "${{ github.event.inputs.action }}" = "destroy" ]; then
            terraform destroy -auto-approve
            echo "Resources cleaned up successfully."
            
            # Delete S3 bucket objects
            aws s3 rm "s3://$(aws s3 ls | awk '{print $3}')" --recursive

            # Delete S3 bucket policy
            aws s3api delete-bucket-policy --bucket "$(aws s3 ls | awk '{print $3}')"
            
            # Delete S3 bucket
            aws s3api delete-bucket --bucket "$(aws s3 ls | awk '{print $3}')"

            echo "S3 bucket and its contents deleted successfully."
          fi
