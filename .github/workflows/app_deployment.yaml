name: Flask App Deployment
on:
  workflow_dispatch:
  push:
    branches:
      - testbranch

jobs:
  lint:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: install dependencies
        run: pip install ruff

      - name: Run linter
        run: ruff check .

  terraform-deployment:
    runs-on: ubuntu-24.04
    outputs:
      APP_URL: ${{ steps.publish.outputs.APP_URL }}
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set AWS Credentials
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.1

      - name: Terraform initialise
        run: terraform init
      
      - name: Terraform plan
        run: terraform plan

      - name: Terraform apply
        id: publish
        run: |
          terraform apply -auto-approve
          echo "APP_URL=$(terraform output -raw app_url)" >> $GITHUB_OUTPUT

  test-endpoints:
    needs: terraform-deployment
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4      

      - name: Pass app url
        run: echo "APP_URL=${{ needs.terraform-deployment.outputs.APP_URL }}" >> $GITHUB_ENV

      - name: Test homepage
        run: |
          HTTP_CODE=$(curl -so /dev/null -w "%{http_code}" "${APP_URL}")
          if [ "$HTTP_CODE" -ne 200 ]; then
            printf "Error: Homepage test failed: Homepage returned $HTTP_CODE\n"
            exit 1
          fi
            printf "Homepage test passed: Homepage returned $HTTP_CODE\n"
      
      - name: Test endpoints
        run: |
          test_endpoint() {
            local url="$1"
            local keyword="$2"
            echo "Testing $url"
            response=$(curl -s "$url")
            if ! echo "$response" | grep -q "$keyword"; then
              echo "Error: Missing '$keyword' in response: $response"
              exit 1
            fi
            echo "âœ… $url passed"
          }
      
          test_endpoint "${APP_URL}/api/v1.0/weather?location=London" '"weather"'
          test_endpoint "${APP_URL}/api/v1.0/temperature?location=Manchester" '"temperature"'
          test_endpoint "${APP_URL}/api/v1.0/wind?location=Glasgow" '"wind speed"'
          test_endpoint "${APP_URL}/api/v1.0/humidity?location=Birmingham" '"humidity"'
