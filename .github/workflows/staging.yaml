name: Flask App Deployment
on:
  workflow_dispatch:
    inputs:
      job_to_run:
        description: 'Select the job to run'
        required: true
        default: 'deploy-web_app'
        type: choice
        options:
          - deploy-web_app
          - destroy-web_app

jobs:
  deploy-web_app:
    if: ${{ inputs.job_to_run == 'deploy-web_app' }}
    runs-on: ubuntu-24.04
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}      
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create zip file for Dockerrun.aws.json
        run: |
          chmod +x zip-Dockerrun.aws.json.sh
          ./zip-Dockerrun.aws.json.sh
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.1
      
      - name: Terraform initialise
        run: terraform init

      - name: Terraform apply
        run: |
          terraform apply -auto-approve

  destroy-web_app:
    if: ${{ inputs.job_to_run == 'destroy_web_app' }}
    runs-on: ubuntu-24.04
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.1
      
      - name: Terraform initialise
        run: terraform init

      - name: Destroy resources
        run: |
          terraform destroy -auto-approve
          echo "Resources cleaned up successfully."
          aws s3 rm "s3://$(aws s3 ls | awk '{print $3}')" --recursive # Delete S3 bucket objects
          aws s3api delete-bucket-policy --bucket "$(aws s3 ls | awk '{print $3}')" # Delete S3 bucket policy
          aws s3api delete-bucket --bucket "$(aws s3 ls | awk '{print $3}')" # Delete S3 bucket
          echo "S3 bucket and its contents deleted successfully."
